---
# SPDX-License-Identifier: Apache-2.0
# SPDX-FileCopyrightText: 2025 The Linux Foundation

# Action test/validation workflow
name: 'Test GitHub Action ðŸ§ª'

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

permissions: {}

jobs:
  ### Comprehensive Test Suite (All Fixtures) ###
  test-comprehensive:
    name: 'Comprehensive Test Suite'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 8
    steps:
      # Harden the runner used by this workflow
      # yamllint disable-line rule:line-length
      - uses: step-security/harden-runner@6c439dc8bdf85cadbbce9ed30d1c7b959517bc49 # v2.12.2
        with:
          egress-policy: 'audit'

      - name: 'Checkout repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Run comprehensive test suite'
        run: |
          echo "ðŸ§ª Running comprehensive test suite..."
          ./tests/scripts/test_all.sh

  ### Test External Repository ###
  test-external-repo:
    name: 'Test External Repository'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 8
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Checkout sample project repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: 'lfreleng-actions/test-python-project'
          path: 'test-python-project'

      - name: 'Test External Project'
        id: test-external
        uses: ./
        with:
          path_prefix: 'test-python-project/'

      - name: 'Validate External Project Output'
        run: |
          echo "Build Python: '${{ steps.test-external.outputs.build_python }}'"
          echo "Matrix JSON: '${{ steps.test-external.outputs.matrix_json }}'"
          # Validate that outputs are not empty
          if [ -z "${{ steps.test-external.outputs.build_python }}" ]; then
            echo "Error: build_python output is empty"
            exit 1
          fi
          if [ -z "${{ steps.test-external.outputs.matrix_json }}" ]; then
            echo "Error: matrix_json output is empty"
            exit 1
          fi

  ### Test Missing pyproject.toml ###
  test-missing-pyproject:
    name: 'Test Missing pyproject.toml'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    timeout-minutes: 8
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: 'Create empty test directory'
        run: mkdir -p empty-test-dir

      - name: 'Test missing pyproject.toml'
        id: test-missing
        uses: ./
        with:
          path_prefix: 'empty-test-dir/'
        continue-on-error: true

      - name: 'Validate missing pyproject.toml failure'
        run: |
          if [ "${{ steps.test-missing.outcome }}" != "failure" ]; then
            echo "Error: Expected test to fail due to missing pyproject.toml"
            exit 1
          fi
          echo "Test correctly failed due to missing pyproject.toml"
